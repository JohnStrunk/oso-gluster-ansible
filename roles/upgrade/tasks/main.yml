# vim: set ts=2 sw=2 et :
---

- debug:
    msg: "Working on: {{ upgrading_host }}"

# Determine if Gluster packages will be upgraded
- name: Look for available updates
  yum:
    list: updates
  register: result

- set_fact:
    gupdate: false
    update_count: "{{ result.results|length }}"

- name: Determine if Gluster packages will be updated
  set_fact:
    gupdate: true
  when: "item.name is search('^gluster')"
  with_items: "{{ result.results }}"

- include_tasks: wait_for_healthy.yml
  when: inventory_hostname in groups['gluster-servers']

# If we're going to make changes, pause for user's ok
- name: Pause before making changes
  pause:
    prompt: |-
            Cluster is healthy.
            Ready to upgrade {{ inventory_hostname }}.
            Stopping/updating gluster: {{ gupdate }}
            Packages to be upgraded: {{ update_count }}
    seconds: 30
  when: gupdate or (update_count|int > 0)

# If Gluster is being upgraded, we need to stop/kill all its processes
- when: gupdate|bool
  block:
    - name: Stop glusterd
      systemd:
        name: glusterd
        state: stopped
      when: inventory_hostname in groups['gluster-servers']

    # We allow success for rc == 0 or 1 (success or process not found) to
    # handle cases where there are no glusterfs(d) processes on the machine
    - name: Stop glusterfs
      command: "pkill glusterfs"
      register: result
      failed_when: result.rc != 0 and result.rc != 1

    - name: Stop glusterfsd
      command: "pkill glusterfsd"
      register: result
      failed_when: result.rc != 0 and result.rc != 1

- when: gupdate|bool or (update_count|int > 0)
  block:
    - name: Upgrade host packages to latest version
      yum:
        name: "*"
        state: latest
      register: system_updated

    # When gluster gets upgraded, it removes our previous customization. This
    # puts it back.
    - name: Enable systemd to auto-restart glusterd
      lineinfile:
        state: present
        insertafter: "^\\[Service\\]"
        # Ensure only 1 key= instance exists, and only match left of equal
        # so we can change the value, too
        regexp: "{{ item | regex_search('^(.*=)') }}"
        line: "{{ item }}"
        path: /usr/lib/systemd/system/glusterd.service
      with_items:
        - "RestartSec=60"
        - "Restart=on-abnormal"
        # Old setting name for interval
        - "StartLimitInterval=3600"
        # New setting name for interval
        - "StartLimitIntervalSec=3600"
        - "StartLimitBurst=3"
      when: inventory_hostname in groups['gluster-servers']

    - name: Reload systemd configuration
      systemd:
        daemon_reload: true

    - name: Reboot after upgrade
      include_role:
        name: "reboot-system"
      when: gupdate or system_updated.changed

- include_tasks: wait_for_healthy.yml
  when: inventory_hostname in groups['gluster-servers']
